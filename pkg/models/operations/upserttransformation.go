// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/hookdeck-go/pkg/models/shared"
	"net/http"
)

type UpsertTransformationRequestBody struct {
	// JavaScript code to be executed as string
	Code string `json:"code"`
	// Key-value environment variables to be passed to the transformation
	Env map[string]interface{} `json:"env,omitempty"`
	// A unique, human-friendly name for the transformation
	Name string `json:"name"`
}

func (o *UpsertTransformationRequestBody) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *UpsertTransformationRequestBody) GetEnv() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Env
}

func (o *UpsertTransformationRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type UpsertTransformationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A single transformation
	Transformation *shared.Transformation
}

func (o *UpsertTransformationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpsertTransformationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpsertTransformationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpsertTransformationResponse) GetTransformation() *shared.Transformation {
	if o == nil {
		return nil
	}
	return o.Transformation
}
