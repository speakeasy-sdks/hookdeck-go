// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"github.com/speakeasy-sdks/hookdeck-go/pkg/models/shared"
	"github.com/speakeasy-sdks/hookdeck-go/pkg/utils"
	"net/http"
)

type CreateIgnoredEventBulkRetryRequestBodyQueryCauseType string

const (
	CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeStr        CreateIgnoredEventBulkRetryRequestBodyQueryCauseType = "str"
	CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeArrayOfstr CreateIgnoredEventBulkRetryRequestBodyQueryCauseType = "arrayOfstr"
)

type CreateIgnoredEventBulkRetryRequestBodyQueryCause struct {
	Str        *string
	ArrayOfstr []string

	Type CreateIgnoredEventBulkRetryRequestBodyQueryCauseType
}

func CreateCreateIgnoredEventBulkRetryRequestBodyQueryCauseStr(str string) CreateIgnoredEventBulkRetryRequestBodyQueryCause {
	typ := CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeStr

	return CreateIgnoredEventBulkRetryRequestBodyQueryCause{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateIgnoredEventBulkRetryRequestBodyQueryCauseArrayOfstr(arrayOfstr []string) CreateIgnoredEventBulkRetryRequestBodyQueryCause {
	typ := CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeArrayOfstr

	return CreateIgnoredEventBulkRetryRequestBodyQueryCause{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *CreateIgnoredEventBulkRetryRequestBodyQueryCause) UnmarshalJSON(data []byte) error {

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = CreateIgnoredEventBulkRetryRequestBodyQueryCauseTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateIgnoredEventBulkRetryRequestBodyQueryCause) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDType string

const (
	CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeStr        CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDType = "str"
	CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeArrayOfstr CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDType = "arrayOfstr"
)

type CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID struct {
	Str        *string
	ArrayOfstr []string

	Type CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDType
}

func CreateCreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDStr(str string) CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID {
	typ := CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeStr

	return CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDArrayOfstr(arrayOfstr []string) CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID {
	typ := CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeArrayOfstr

	return CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID) UnmarshalJSON(data []byte) error {

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = CreateIgnoredEventBulkRetryRequestBodyQueryWebhookIDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// CreateIgnoredEventBulkRetryRequestBodyQuery - Filter by the bulk retry ignored event query object
type CreateIgnoredEventBulkRetryRequestBodyQuery struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The cause of the ignored event
	Cause *CreateIgnoredEventBulkRetryRequestBodyQueryCause `json:"cause,omitempty"`
	// The associated transformation ID (only applicable to the cause `TRANSFORMATION_FAILED`)
	TransformationID *string `json:"transformation_id,omitempty"`
	// Connection ID of the ignored event
	WebhookID *CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID `json:"webhook_id,omitempty"`
}

func (c CreateIgnoredEventBulkRetryRequestBodyQuery) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateIgnoredEventBulkRetryRequestBodyQuery) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateIgnoredEventBulkRetryRequestBodyQuery) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *CreateIgnoredEventBulkRetryRequestBodyQuery) GetCause() *CreateIgnoredEventBulkRetryRequestBodyQueryCause {
	if o == nil {
		return nil
	}
	return o.Cause
}

func (o *CreateIgnoredEventBulkRetryRequestBodyQuery) GetTransformationID() *string {
	if o == nil {
		return nil
	}
	return o.TransformationID
}

func (o *CreateIgnoredEventBulkRetryRequestBodyQuery) GetWebhookID() *CreateIgnoredEventBulkRetryRequestBodyQueryWebhookID {
	if o == nil {
		return nil
	}
	return o.WebhookID
}

type CreateIgnoredEventBulkRetryRequestBody struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Filter by the bulk retry ignored event query object
	Query *CreateIgnoredEventBulkRetryRequestBodyQuery `json:"query,omitempty"`
}

func (c CreateIgnoredEventBulkRetryRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateIgnoredEventBulkRetryRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateIgnoredEventBulkRetryRequestBody) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *CreateIgnoredEventBulkRetryRequestBody) GetQuery() *CreateIgnoredEventBulkRetryRequestBodyQuery {
	if o == nil {
		return nil
	}
	return o.Query
}

type CreateIgnoredEventBulkRetryResponse struct {
	// A single ignored events bulk retry
	BatchOperation *shared.BatchOperation
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateIgnoredEventBulkRetryResponse) GetBatchOperation() *shared.BatchOperation {
	if o == nil {
		return nil
	}
	return o.BatchOperation
}

func (o *CreateIgnoredEventBulkRetryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateIgnoredEventBulkRetryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateIgnoredEventBulkRetryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
