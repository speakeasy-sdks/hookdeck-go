// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hookdeck-go/pkg/utils"
)

// IssueTriggerChannels - Notification channels object for the specific channel type
type IssueTriggerChannels struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Email channel for an issue trigger
	Email map[string]interface{} `json:"email,omitempty"`
	// Integration channel for an issue trigger
	Opsgenie map[string]interface{} `json:"opsgenie,omitempty"`
	// Slack channel for an issue trigger
	Slack *IssueTriggerSlackChannel `json:"slack,omitempty"`
}

func (i IssueTriggerChannels) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IssueTriggerChannels) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IssueTriggerChannels) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *IssueTriggerChannels) GetEmail() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *IssueTriggerChannels) GetOpsgenie() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Opsgenie
}

func (o *IssueTriggerChannels) GetSlack() *IssueTriggerSlackChannel {
	if o == nil {
		return nil
	}
	return o.Slack
}
