// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// IntegrationConfigs1 - Decrypted Key/Value object of the associated configuration for that provider
type IntegrationConfigs1 struct {
}

// Integration - A single integration
type Integration struct {
	// Decrypted Key/Value object of the associated configuration for that provider
	Configs interface{} `json:"configs"`
	// Date the integration was created
	CreatedAt time.Time `json:"created_at"`
	// List of features to enable (see features list below)
	Features []IntegrationFeature `json:"features"`
	// ID of the integration
	ID string `json:"id"`
	// Label of the integration
	Label string `json:"label"`
	// The provider name
	Provider IntegrationProvider `json:"provider"`
	// List of source IDs the integration is attached to
	Sources []string `json:"sources"`
	// ID of the workspace
	TeamID string `json:"team_id"`
	// Date the integration was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

func (o *Integration) GetConfigs() interface{} {
	if o == nil {
		return nil
	}
	return o.Configs
}

func (o *Integration) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Integration) GetFeatures() []IntegrationFeature {
	if o == nil {
		return []IntegrationFeature{}
	}
	return o.Features
}

func (o *Integration) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Integration) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *Integration) GetProvider() IntegrationProvider {
	if o == nil {
		return IntegrationProvider("")
	}
	return o.Provider
}

func (o *Integration) GetSources() []string {
	if o == nil {
		return []string{}
	}
	return o.Sources
}

func (o *Integration) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *Integration) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
