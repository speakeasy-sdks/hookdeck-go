// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hookdeck-go/pkg/utils"
)

type TransformReference struct {
	// ID of the attached transformation object. Optional input, always set once the rule is defined
	TransformationID string `json:"transformation_id"`
	// A transformation rule must be of type `transformation`
	type_ string `const:"transform" json:"type"`
}

func (t TransformReference) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransformReference) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *TransformReference) GetTransformationID() string {
	if o == nil {
		return ""
	}
	return o.TransformationID
}

func (o *TransformReference) GetType() string {
	return "transform"
}
