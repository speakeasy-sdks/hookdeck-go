// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hookdeck-go/pkg/utils"
)

// TransformationIssueAggregationKeys - Keys used as the aggregation keys a 'transformation' type issue
type TransformationIssueAggregationKeys struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The minimum log level to open the issue on
	LogLevel         TransformationExecutionLogLevel `json:"log_level"`
	TransformationID []string                        `json:"transformation_id"`
}

func (t TransformationIssueAggregationKeys) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransformationIssueAggregationKeys) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TransformationIssueAggregationKeys) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *TransformationIssueAggregationKeys) GetLogLevel() TransformationExecutionLogLevel {
	if o == nil {
		return TransformationExecutionLogLevel("")
	}
	return o.LogLevel
}

func (o *TransformationIssueAggregationKeys) GetTransformationID() []string {
	if o == nil {
		return []string{}
	}
	return o.TransformationID
}
