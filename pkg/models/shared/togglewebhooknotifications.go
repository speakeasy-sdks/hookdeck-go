// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hookdeck-go/pkg/utils"
)

type ToggleWebhookNotifications struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Enabled              bool                   `json:"enabled"`
	SourceID             string                 `json:"source_id"`
	Topics               []TopicsValue          `json:"topics,omitempty"`
}

func (t ToggleWebhookNotifications) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *ToggleWebhookNotifications) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ToggleWebhookNotifications) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ToggleWebhookNotifications) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *ToggleWebhookNotifications) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

func (o *ToggleWebhookNotifications) GetTopics() []TopicsValue {
	if o == nil {
		return nil
	}
	return o.Topics
}
