// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"github.com/speakeasy-sdks/hookdeck-go/internal/utils"
	"github.com/speakeasy-sdks/hookdeck-go/models/components"
	"net/http"
)

type QueryParamCauseType string

const (
	QueryParamCauseTypeStr        QueryParamCauseType = "str"
	QueryParamCauseTypeArrayOfstr QueryParamCauseType = "arrayOfstr"
)

// QueryParamCause - The cause of the ignored event
type QueryParamCause struct {
	Str        *string
	ArrayOfstr []string

	Type QueryParamCauseType
}

func CreateQueryParamCauseStr(str string) QueryParamCause {
	typ := QueryParamCauseTypeStr

	return QueryParamCause{
		Str:  &str,
		Type: typ,
	}
}

func CreateQueryParamCauseArrayOfstr(arrayOfstr []string) QueryParamCause {
	typ := QueryParamCauseTypeArrayOfstr

	return QueryParamCause{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *QueryParamCause) UnmarshalJSON(data []byte) error {

	str := ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = QueryParamCauseTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = QueryParamCauseTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u QueryParamCause) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDType string

const (
	GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeStr        GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDType = "str"
	GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeArrayOfstr GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDType = "arrayOfstr"
)

// GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID - Connection ID of the ignored event
type GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID struct {
	Str        *string
	ArrayOfstr []string

	Type GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDType
}

func CreateGenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDStr(str string) GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID {
	typ := GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeStr

	return GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID{
		Str:  &str,
		Type: typ,
	}
}

func CreateGenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDArrayOfstr(arrayOfstr []string) GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID {
	typ := GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeArrayOfstr

	return GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID) UnmarshalJSON(data []byte) error {

	str := ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = GenerateIgnoredEventBulkRetryPlanQueryParamWebhookIDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// QueryParamQuery - Filter by the bulk retry ignored event query object
type QueryParamQuery struct {
	// The cause of the ignored event
	Cause *QueryParamCause `queryParam:"name=cause"`
	// The associated transformation ID (only applicable to the cause `TRANSFORMATION_FAILED`)
	TransformationID *string `queryParam:"name=transformation_id"`
	// Connection ID of the ignored event
	WebhookID *GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID `queryParam:"name=webhook_id"`
}

func (o *QueryParamQuery) GetCause() *QueryParamCause {
	if o == nil {
		return nil
	}
	return o.Cause
}

func (o *QueryParamQuery) GetTransformationID() *string {
	if o == nil {
		return nil
	}
	return o.TransformationID
}

func (o *QueryParamQuery) GetWebhookID() *GenerateIgnoredEventBulkRetryPlanQueryParamWebhookID {
	if o == nil {
		return nil
	}
	return o.WebhookID
}

type GenerateIgnoredEventBulkRetryPlanRequest struct {
	// Filter by the bulk retry ignored event query object
	Query *QueryParamQuery `queryParam:"style=form,explode=true,name=query"`
}

func (o *GenerateIgnoredEventBulkRetryPlanRequest) GetQuery() *QueryParamQuery {
	if o == nil {
		return nil
	}
	return o.Query
}

type GenerateIgnoredEventBulkRetryPlanResponse struct {
	// Ignored events bulk retry plan
	BatchOperationPlan *components.BatchOperationPlan
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GenerateIgnoredEventBulkRetryPlanResponse) GetBatchOperationPlan() *components.BatchOperationPlan {
	if o == nil {
		return nil
	}
	return o.BatchOperationPlan
}

func (o *GenerateIgnoredEventBulkRetryPlanResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GenerateIgnoredEventBulkRetryPlanResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GenerateIgnoredEventBulkRetryPlanResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
