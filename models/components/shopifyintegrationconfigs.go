// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RateLimitPeriod string

const (
	RateLimitPeriodMinute RateLimitPeriod = "minute"
	RateLimitPeriodSecond RateLimitPeriod = "second"
)

func (e RateLimitPeriod) ToPointer() *RateLimitPeriod {
	return &e
}

func (e *RateLimitPeriod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minute":
		fallthrough
	case "second":
		*e = RateLimitPeriod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RateLimitPeriod: %v", v)
	}
}

type ShopifyIntegrationConfigs struct {
	APIKey           *string          `json:"api_key,omitempty"`
	APISecret        *string          `json:"api_secret,omitempty"`
	RateLimit        *float32         `json:"rate_limit,omitempty"`
	RateLimitPeriod  *RateLimitPeriod `json:"rate_limit_period,omitempty"`
	Shop             *string          `json:"shop,omitempty"`
	WebhookSecretKey string           `json:"webhook_secret_key"`
}

func (o *ShopifyIntegrationConfigs) GetAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.APIKey
}

func (o *ShopifyIntegrationConfigs) GetAPISecret() *string {
	if o == nil {
		return nil
	}
	return o.APISecret
}

func (o *ShopifyIntegrationConfigs) GetRateLimit() *float32 {
	if o == nil {
		return nil
	}
	return o.RateLimit
}

func (o *ShopifyIntegrationConfigs) GetRateLimitPeriod() *RateLimitPeriod {
	if o == nil {
		return nil
	}
	return o.RateLimitPeriod
}

func (o *ShopifyIntegrationConfigs) GetShop() *string {
	if o == nil {
		return nil
	}
	return o.Shop
}

func (o *ShopifyIntegrationConfigs) GetWebhookSecretKey() string {
	if o == nil {
		return ""
	}
	return o.WebhookSecretKey
}
