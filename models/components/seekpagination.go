// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"errors"
	"github.com/speakeasy-sdks/hookdeck-go/v2/internal/utils"
)

type Dir struct {
	Schema *OrderByDirection `json:"schema,omitempty"`
}

func (o *Dir) GetSchema() *OrderByDirection {
	if o == nil {
		return nil
	}
	return o.Schema
}

type OrderByType string

const (
	OrderByTypeStr        OrderByType = "str"
	OrderByTypeArrayOfstr OrderByType = "arrayOfstr"
)

type OrderBy struct {
	Str        *string
	ArrayOfstr []string

	Type OrderByType
}

func CreateOrderByStr(str string) OrderBy {
	typ := OrderByTypeStr

	return OrderBy{
		Str:  &str,
		Type: typ,
	}
}

func CreateOrderByArrayOfstr(arrayOfstr []string) OrderBy {
	typ := OrderByTypeArrayOfstr

	return OrderBy{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *OrderBy) UnmarshalJSON(data []byte) error {

	str := ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = OrderByTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = OrderByTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u OrderBy) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SeekPagination struct {
	Dir     *Dir     `json:"dir,omitempty"`
	Limit   *int64   `json:"limit,omitempty"`
	Next    *string  `json:"next,omitempty"`
	OrderBy *OrderBy `json:"order_by,omitempty"`
	Prev    *string  `json:"prev,omitempty"`
}

func (o *SeekPagination) GetDir() *Dir {
	if o == nil {
		return nil
	}
	return o.Dir
}

func (o *SeekPagination) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SeekPagination) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *SeekPagination) GetOrderBy() *OrderBy {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *SeekPagination) GetPrev() *string {
	if o == nil {
		return nil
	}
	return o.Prev
}
